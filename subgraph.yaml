specVersion: 0.0.3
description: >-
  A secure & decentralized way to address resources on and off the blockchain
  using simple, human-readable names. Access domains and transfer history.
repository: "https://github.com/ansdomain/ans-subgraph"
schema:
  file: ./schema.graphql
dataSources:
  - kind: ethereum/contract
    name: ANSRegistry
    network: arbitrum-goerli
    source:
      address: "0xcCb2AeA8e96B7107CE873dcF0c011F0927E49d0E"
      abi: AnsRegistry
      startBlock: 806640
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.5
      language: wasm/assemblyscript
      file: ./src/ansRegistry.ts
      entities:
        - Domain
        - Account
        - Resolver
      abis:
        - name: AnsRegistry
          file: ./abis/Registry.json
      eventHandlers:
        - event: "Transfer(indexed bytes32,address)"
          handler: handleTransfer
        - event: "NewOwner(indexed bytes32,indexed bytes32,address)"
          handler: handleNewOwner
        - event: "NewResolver(indexed bytes32,address)"
          handler: handleNewResolver
        - event: "NewTTL(indexed bytes32,uint64)"
          handler: handleNewTTL
  
  - kind: ethereum/contract
    name: Resolver
    network: arbitrum-goerli
    source:
      abi: Resolver
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.5
      language: wasm/assemblyscript
      file: ./src/resolver.ts
      entities:
        - AddrChanged
        - MulticoinAddrChanged
        - NameChanged
        - AbiChanged
        - PubkeyChanged
        - Textchanged
        - ContenthashChanged
        - InterfaceChanged
        - AuthorisationChanged
      abis:
        - name: Resolver
          file: ./abis/PublicResolver.json
      eventHandlers:
        - event: "ABIChanged(indexed bytes32,indexed uint256)"
          handler: handleABIChanged
        - event: "AddrChanged(indexed bytes32,address)"
          handler: handleAddrChanged
        - event: "AddressChanged(indexed bytes32,uint256,bytes)"
          handler: handleMulticoinAddrChanged
        - event: >-
            AuthorisationChanged(indexed bytes32,indexed address,indexed
            address,bool)
          handler: handleAuthorisationChanged
        - event: "ContenthashChanged(indexed bytes32,bytes)"
          handler: handleContentHashChanged
        - event: "InterfaceChanged(indexed bytes32,indexed bytes4,address)"
          handler: handleInterfaceChanged
        - event: "NameChanged(indexed bytes32,string)"
          handler: handleNameChanged
        - event: "PubkeyChanged(indexed bytes32,bytes32,bytes32)"
          handler: handlePubkeyChanged
        - event: "TextChanged(indexed bytes32,indexed string,string)"
          handler: handleTextChanged
        - event: "TextChanged(indexed bytes32,indexed string,string,string)"
          handler: handleTextChangedWithValue
        - event: "VersionChanged(indexed bytes32,uint64)"
          handler: handleVersionChanged
  - kind: ethereum/contract
    name: BaseRegistrar
    network: arbitrum-goerli
    source:
      address: "0x16Ac1fe465c9Db4FD65b3b034c11D56Feff8a3bD"
      abi: BaseRegistrar
      startBlock: 806789
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.5
      language: wasm/assemblyscript
      file: ./src/arbRegistrar.ts
      entities:
        - Registration
        - NameRegistered
        - NameRenewed
        - NameTransferred
      abis:
        - name: BaseRegistrar
          file: ./abis/BaseRegistrar.json
      eventHandlers:
        - event: "NameRegistered(indexed uint256,indexed address,uint256)"
          handler: handleNameRegistered
        - event: "NameRenewed(indexed uint256,uint256)"
          handler: handleNameRenewed
        - event: "Transfer(indexed address,indexed address,indexed uint256)"
          handler: handleNameTransferred

  - kind: ethereum/contract
    name: ArbRegistrarController
    network: arbitrum-goerli
    source:
      address: "0xc6A70cd44B083c8Dc0AaD36381591675B0350D1B"
      abi: ArbRegistrarController
      startBlock: 834354
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.5
      language: wasm/assemblyscript
      file: ./src/arbRegistrar.ts
      entities:
        - Registration
      abis:
        - name: ArbRegistrarController
          file: ./abis/ArbRegistrarController.json
      eventHandlers:
        - event: >-
            NameRegistered(string,indexed bytes32,indexed
            address,uint256,uint256,uint256)
          handler: handleNameRegisteredByController
        - event: "NameRenewed(string,indexed bytes32,uint256,uint256)"
          handler: handleNameRenewedByController
  - kind: ethereum/contract
    name: NameWrapper
    network: arbitrum-goerli
    source:
      abi: NameWrapper
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.5
      language: wasm/assemblyscript
      file: ./src/nameWrapper.ts
      entities:
        - NameWrapper
      abis:
        - name: NameWrapper
          file: ./abis/NameWrapper.json
      eventHandlers:
        - event: "NameWrapped(indexed bytes32,bytes,address,uint32,uint64)"
          handler: handleNameWrapped
        - event: "NameUnwrapped(indexed bytes32,address)"
          handler: handleNameUnwrapped
        - event: "FusesSet(indexed bytes32,uint32,uint64)"
          handler: handleFusesSet

  - kind: ethereum/contract
    name: ArbRegistrarControllerOld
    network: arbitrum-goerli
    source:
      abi: ArbRegistrarControllerOld
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.5
      language: wasm/assemblyscript
      file: ./src/arbRegistrar.ts
      entities:
        - Registration
      abis:
        - name: ArbRegistrarControllerOld
          file: ./abis/ArbRegistrarControllerOld.json
      eventHandlers:
        - event: >-
            NameRegistered(string,indexed bytes32,indexed
            address,uint256,uint256)
          handler: handleNameRegisteredByControllerOld
        - event: "NameRenewed(string,indexed bytes32,uint256,uint256)"
          handler: handleNameRenewedByController   